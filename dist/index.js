import { convertCommand } from "./commands/convert.js";
import { formatCBQ } from "./cbq/formatCBQ.js";
import { stickerToFile } from "./logic/stickerToFile.js";
import bot, { setBotCommands } from "./bot.js";
const startServer = async () => {
    await setBotCommands();
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    bot.command("convert", convertCommand);
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    bot.callbackQuery(/^format:(lottie|json)$/, formatCBQ);
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
    bot.on("message:sticker", stickerToFile);
    // –°—Ç–∞—Ä—Ç
    bot.command("start", (ctx) => {
        ctx.reply("üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /convert, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å—Ç–∏–∫–µ—Ä –≤ .tgs –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.");
    });
    bot.start();
};
startServer();
//# sourceMappingURL=index.js.map